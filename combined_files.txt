
#model.py
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager, UserMixin

db = SQLAlchemy()
login_manager = LoginManager()


class Participant(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(50))
    coins = db.Column(db.Integer)
    password = db.Column(db.String(100))

class CentralBank(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    coins = db.Column(db.Integer)

class Transaction(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    timestamp = db.Column(db.DateTime)
    sender_id = db.Column(db.Integer, db.ForeignKey('participant.id'))
    receiver_id = db.Column(db.Integer, db.ForeignKey('participant.id'))
    subject = db.Column(db.String(200))

    sender = db.relationship('Participant', foreign_keys=[sender_id])
    receiver = db.relationship('Participant', foreign_keys=[receiver_id])



@login_manager.user_loader
def load_user(user_id):
    return Participant.query.get(int(user_id))

#app.py
from flask import Flask
from model import db, login_manager
from routes import bp as routes_bp

def create_app():
    app = Flask(__name__)
    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///test.db'
    app.config['SECRET_KEY'] = 'secret-key'
    
    db.init_app(app)
    login_manager.init_app(app)

    with app.app_context():
        db.create_all()

    app.register_blueprint(routes_bp)

    return app

if __name__ == "__main__":
    app = create_app()
    app.run(debug=True)

#routes.py
from flask import Blueprint, render_template, request, redirect, url_for
from flask_login import login_user, login_required, logout_user, current_user
from datetime import datetime
from model import db, Participant, CentralBank, Transaction  # Adjust import here
from werkzeug.security import generate_password_hash, check_password_hash

bp = Blueprint('routes', __name__)

@bp.route('/', methods=['GET', 'POST'])
def index():
    if current_user.is_authenticated:
        return redirect(url_for('routes.homepage'))
    else:
        return redirect(url_for('routes.login'))
@bp.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        hashed_password = generate_password_hash(request.form['password'])
        new_user = Participant(name=request.form['name'], password=hashed_password, coins=100)
        db.session.add(new_user)
        db.session.commit()
        return redirect(url_for('routes.login'))
    return render_template('register.html')

@bp.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        user = Participant.query.filter_by(name=request.form['name']).first()
        if user and check_password_hash(user.password, request.form['password']):
            login_user(user)
            return redirect(url_for('routes.homepage'))
    return render_template('login.html')


@bp.route('/homepage', methods=['GET'])
@login_required
def homepage():
    participants = Participant.query.all()
    central_bank = CentralBank.query.all()
    cb_activity = sum([central_bank.coins for central_bank in central_bank])
    total_activity = sum([participant.coins for participant in participants],cb_activity)

    transactions = Transaction.query.order_by(Transaction.timestamp.desc()).all()
    return render_template('homepage.html', participants=participants, central_bank=central_bank, transactions=transactions,total_activity=total_activity,cb_activity=cb_activity)


@bp.route('/profile', methods=['GET', 'POST'])
@login_required
def profile():
    if request.method == 'POST':
        current_user.name = request.form['name']
        db.session.commit()
        return redirect(url_for('routes.homepage'))
    return render_template('profile.html')

@bp.route('/transact', methods=['GET', 'POST'])
@login_required
def transact():
    if request.method == 'POST':
        receiver = Participant.query.filter_by(name=request.form['receiver']).first()
        if receiver and current_user.coins >= int(request.form['coins']):
            current_user.coins -= int(request.form['coins'])
            receiver.coins += int(request.form['coins'])
            transaction = Transaction(timestamp=datetime.utcnow(), sender_id=current_user.id, receiver_id=receiver.id, subject=request.form['subject'])
            db.session.add(transaction)
            db.session.commit()
        return redirect(url_for('routes.homepage'))
    return render_template('transact.html')

@bp.route('/redistribute', methods=['POST'])
@login_required
def redistribute():
    if current_user.id != 1:  # Assuming the central bank's ID is 1
        return redirect(url_for('routes.homepage'))
    participants = Participant.query.all()
    total_activity = sum([p.activity for p in participants])
    for participant in participants:
        participant.coins += (participant.activity / total_activity) * CentralBank.query.first().coins
        participant.activity = 0
    CentralBank.query.first().coins = 0
    db.session.commit()
    return redirect(url_for('routes.homepage'))

@bp.route('/exit', methods=['POST'])
@login_required
def exit():
    CentralBank.query.first().coins += current_user.coins
    current_user.coins = 0
    db.session.delete(current_user)
    db.session.commit()
    logout_user()
    return redirect(url_for('routes.login'))

@bp.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('routes.login'))
<!DOCTYPE html>
<html>
<head>
    <title>Profile</title>
    <link rel="stylesheet" href="static/styles.css">

</head>
<body>
    <form method="POST">
        <label for="name">Name</label>
        <input type="text" id="name" name="name" value="{{ current_user.name }}" required>
        <button type="submit">Update</button>
    </form>
    <a href="{{ url_for('routes.homepage') }}">Back</a>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <title>Transact</title>
    <link rel="stylesheet" href="static/styles.css">

</head>
<body>
    <form method="POST">
        <label for="receiver">Receiver</label>
        <input type="text" id="receiver" name="receiver" required>
        <label for="coins">Coins</label>
        <input type="number" id="coins" name="coins" required>
        <label for="subject">Subject</label>
        <input type="text" id="subject" name="subject" required>
        <button type="submit">Transact</button>
    </form>
    <a href="{{ url_for('routes.homepage') }}">Back</a>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <title>Homepage</title>
    <link rel="stylesheet" href="static/styles.css">
</head>
<body>
    <h1>Welcome, {{ current_user.name }}!</h1>
    <h2>Total Coins: {{ total_activity }}</h2>
    <h2>Central Bank: {{ cb_activity }}</h2>
    <h2>Your Coins: {{ current_user.coins }}</h2>
    <h2>Participant Balances</h2>
    {% for participant in participants %}
        <p>{{ participant.name }}: {{ participant.coins }}</p>
    {% endfor %}
    <h2>Transaction Log</h2>
    {% for transaction in transactions %}
        <p>{{ transaction.timestamp }}: {{ transaction.sender.name }} -> {{ transaction.receiver.name }} ({{ transaction.subject }})</p>
    {% endfor %}
    {% if current_user.id == 1 %}
        <form method="POST" action="{{ url_for('routes.redistribute') }}">
            <button type="submit">Redistribute Coins</button>
        </form>
    {% endif %}
    <form method="POST" action="{{ url_for('routes.exit') }}">
        <button type="submit">Exit System</button>
    </form>
    <a href="{{ url_for('routes.profile') }}">Profile</a>
    <a href="{{ url_for('routes.transact') }}">Transact</a>
    <a href="{{ url_for('routes.logout') }}">Logout</a>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <link rel="stylesheet" href="static/styles.css">

</head>
<body>
    <form method="POST">
        <label for="name">Name</label>
        <input type="text" id="name" name="name" required>
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required>
        <button type="submit">Register</button>
    </form>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <link rel="stylesheet" href="static/styles.css">

</head>
<body>
    <form method="POST">
        <label for="name">Name</label>
        <input type="text" id="name" name="name" required>
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required>
        <button type="submit">Login</button>
    </form>
    <p>Don't have an account? <a href="{{ url_for('routes.register') }}">Register</a></p>
</body>
</html>

